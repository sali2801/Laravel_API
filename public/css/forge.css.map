{"version":3,"sources":["styleguide.scss","../scss/_utilities/_mixins.scss","styleguide.css","../scss/_utilities/_variables.scss","../node_modules/susy/sass/susy/output/support/_rem.scss","../node_modules/susy/sass/susy/language/susy/_span.scss","../node_modules/susy/sass/susy/output/shared/_direction.scss","../node_modules/susy/sass/susy/language/susy/_gutters.scss","../scss/_utilities/_functions.scss"],"names":[],"mappings":"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","file":"forge.css","sourcesContent":["//                 ____  _____    _   __\r\n//                / __ \\/ ___/   / | / /__  __  _____\r\n//               / / / /\\__ \\   /  |/ / _ \\/ / / / _ \\\r\n//              / /_/ /___/ /  / /|  /  __/ /_/ /  __/\r\n//             /_____//____/  /_/ |_/\\___/\\__,_/\\___/\r\n//\r\n//   ==================== Styleguide Styles ====================\r\n//\r\n//   These are styles that are only used in the styleguide, and\r\n//   should not be available in client applications.\r\n\r\n@import \"../node_modules/susy/sass/susy\";\r\n\r\n@import \"../scss/_utilities/functions\";\r\n@import \"../scss/_utilities/variables\";\r\n@import \"../scss/_utilities/mixins\";\r\n\r\n// FixedSticky\r\n.fixedsticky-dummy {\r\n  display: none;\r\n}\r\n\r\n.fixedsticky-on + .fixedsticky-dummy {\r\n  display: block;\r\n}\r\n\r\n// Styleguide!\r\nmain {\r\n  @include clearfix;\r\n}\r\n\r\n.styleguide-navigation-toggle {\r\n  @include media($tablet) {\r\n    display: none;\r\n  }\r\n}\r\n\r\n\r\n.styleguide-sidebar {\r\n  padding-top: $base-spacing;\r\n\r\n  @include media($mobile) {\r\n    text-align: center;\r\n    margin: ($base-spacing / 2);\r\n    padding: $base-spacing;\r\n    border: 1px solid $light-gray;\r\n\r\n    .waypoints.is-hidden {\r\n      display: none;\r\n    }\r\n\r\n    .waypoints ul {\r\n      max-height: 600px;\r\n    }\r\n  }\r\n\r\n  @include media($tablet) {\r\n    @include span(4 rtl);\r\n    position: sticky;\r\n    top: 0;\r\n\r\n    // Fallback for position:sticky, through Filament Group's fixed-sticky\r\n    &.fixedsticky-on {\r\n      position: fixed;\r\n      width: 100%;\r\n      max-width: 1440px;\r\n      padding: 0;\r\n\r\n      .waypoints {\r\n        position: absolute;\r\n        width: span(4);\r\n        padding: $base-spacing gutter();\r\n        right: 0;\r\n        display: inline-block;\r\n      }\r\n    }\r\n\r\n    &.fixedsticky-off {\r\n      position: static;\r\n    }\r\n  }\r\n}\r\n\r\n.styleguide-content {\r\n  @include clearfix;\r\n  @include span(100%);\r\n  padding-top: $base-spacing;\r\n  line-height: $comfortable-line-height;\r\n\r\n  @include media($tablet) {\r\n    @include span(10);\r\n    @include push(2);\r\n  }\r\n\r\n  // Override galleries in styleguide content to fit to grid.\r\n  > .gallery {\r\n    margin: ($base-spacing / 2) (-$base-spacing / 2);\r\n  }\r\n}\r\n\r\n.styleguide-example {\r\n  margin: $base-spacing 0 ($base-spacing * 2);\r\n}\r\n\r\n.styleguide-example-content {\r\n  border-radius: $sm-border-radius;\r\n  border: 1px solid $light-gray;\r\n}\r\n\r\n.styleguide-reference-link {\r\n  color: $light-gray;\r\n\r\n  &:hover {\r\n    color: $med-gray;\r\n    text-decoration: none;\r\n  }\r\n}\r\n\r\n.styleguide-example > h3 em {\r\n  float: right;\r\n  text-transform: none;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  color: $med-gray;\r\n}\r\n\r\n.styleguide-description {\r\n  margin-bottom: ($base-spacing / 2);\r\n}\r\n\r\n.styleguide-element {\r\n  overflow: hidden;\r\n  position: relative;\r\n  padding: $base-spacing;\r\n  min-height: 75px;\r\n}\r\n\r\n.styleguide-element + .styleguide-element {\r\n  border-top: 1px solid #eee;\r\n}\r\n\r\n.styleguide-modifier-name {\r\n  display: block;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  padding: 4px ($base-spacing / 2);\r\n  font-size: $font-smaller;\r\n  color: $med-gray;\r\n  background: #efefef;\r\n  border-bottom-left-radius: $sm-border-radius;\r\n  border-top: 0;\r\n  z-index: 10;\r\n}\r\n\r\n.styleguide-html {\r\n  display: none;\r\n  padding: 10px 25px 10px 5px;\r\n  background: #efefef;\r\n  border-radius: $sm-border-radius;\r\n  font-size: 18px;\r\n  overflow: auto;\r\n  margin-top: $base-spacing;\r\n}\r\n\r\n.hljs {\r\n  background: transparent !important;\r\n  display: inline !important;\r\n  padding-right: 25px !important;\r\n}\r\n\r\n.styleguide-example .styleguide-html .highlight {\r\n  background: none;\r\n}\r\n\r\n.styleguide-element__description {\r\n  display: block;\r\n  margin: 0 0 $base-spacing;\r\n\r\n  strong {\r\n    font-size: 90%;\r\n    background: #eee;\r\n    padding: 4px 8px;\r\n    border-radius: $sm-border-radius;\r\n  }\r\n}\r\n\r\n.font-tile {\r\n  font-size: $font-large;\r\n  margin: $base-spacing 0;\r\n  padding: $base-spacing;\r\n  border-radius: $sm-border-radius;\r\n  border: 1px solid $light-gray;\r\n}\r\n\r\n.font-tile code {\r\n  display: block;\r\n  font-size: $font-smaller;\r\n  color: $med-gray;\r\n  font-weight: 400;\r\n  line-height: 1.5;\r\n  padding-top: 5px;\r\n}\r\n\r\n.color-tile {\r\n  width: 100%;\r\n  background: #eee;\r\n  color: #fff;\r\n  text-shadow: $text-shadow;\r\n  padding: ($base-spacing * 2) $base-spacing;\r\n  border-radius: 2px;\r\n\r\n  & code {\r\n    color: rgba(255, 255, 255, 0.7);\r\n  }\r\n}\r\n\r\n.color-tile__value {\r\n  display: block;\r\n}\r\n\r\n.button.button--preview {\r\n  &:before {\r\n    content: \"\\25B6\";\r\n    margin-right: ($base-spacing / 2);\r\n  }\r\n}\r\n\r\n.styleguide-tip {\r\n  &:before {\r\n    @include icomoon-icon;\r\n    content: \"\\f000 \";\r\n    position: relative;\r\n    top: 1px;\r\n    padding-right: 4px;\r\n  }\r\n}\r\n\r\n.styleguide-footer {\r\n  margin-top: $section-spacing;\r\n  margin-bottom: $section-spacing;\r\n}\r\n\r\n.styleguide-version {\r\n  vertical-align: 50%;\r\n  background: rgba(#000, 0.25);\r\n  padding: ($base-spacing / 4) ($base-spacing / 2);\r\n  border-radius: $lg-border-radius;\r\n  text-shadow: none;\r\n}\r\n\r\n.styleguide-markuplink {\r\n  color: $med-gray;\r\n  font-size: $font-smaller;\r\n  margin: 4px;\r\n\r\n  a {\r\n    color: $med-gray;\r\n\r\n    &:before {\r\n      @include icomoon-icon;\r\n      content: \"\\f05f \";\r\n      position: relative;\r\n      top: 1px;\r\n      padding-right: 6px;\r\n    }\r\n\r\n    &:hover {\r\n      text-decoration: none;\r\n    }\r\n  }\r\n}\r\n\r\n// Specific pattern overrides\r\n#message-callout--example---white,\r\n#info-bar--example,\r\n#navigation--example---white {\r\n  background: #fff url(\"/styleguide/assets/pattern-dark-bg.png\");\r\n}\r\n\r\n\r\n.text-field.-search.styleguide-filter {\r\n  border: 0;\r\n  background-position: 0 50%;\r\n  padding-left: 18px;\r\n\r\n  &:focus {\r\n    border: 0;\r\n    box-shadow: none;\r\n  }\r\n}\r\n\r\n.waypoints li.is-hidden {\r\n  display: none;\r\n}\r\n\r\n.waypoints li.is-expanded ul {\r\n  max-height: 600px;\r\n}\r\n","// Calculate rgba() fallback value for older browsers.\r\n//\r\n// Examples:\r\n// @include rgba(background-color, $blue, 0.8);\r\n// @include rgba(background-color, #23b8fc, 0.5);\r\n// @include rgba(background-color, rgb(35, 184, 252), 0.5);\r\n//\r\n@mixin rgba($property, $color: #000, $value: 0.5, $fallback: #000) {\r\n  #{$property}: rgb(red($fallback), green($fallback), blue($fallback));\r\n  #{$property}: rgba($color, $value);\r\n}\r\n\r\n// Micro-clearfix mixin.\r\n// See: http://goo.gl/y82qLF\r\n@mixin clearfix {\r\n  &:after {\r\n    clear: both;\r\n    content: \"\";\r\n    display: table;\r\n  }\r\n}\r\n\r\n// Media query mixin\r\n@mixin media($breakpoint) {\r\n  @media #{$breakpoint} {\r\n    @content;\r\n  }\r\n}\r\n\r\n// Set typographic settings for icon fonts.\r\n@mixin icomoon-icon {\r\n  font-family: \"icomoon\";\r\n  speak: none;\r\n  font-style: normal;\r\n  font-weight: normal;\r\n  font-variant: normal;\r\n  text-transform: none;\r\n  line-height: 1;\r\n\r\n  // Better Font Rendering\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n}\r\n\r\n// Hide only visually, but have it available for screenreaders.\r\n// @mixin visually-hidden\r\n// @mixin visually-restored\r\n//\r\n// @param $position: absolute\r\n@mixin visually-hidden($position:absolute) { border: 0; clip: rect(0 0 0 0); height: 1px; margin: -1px; overflow: hidden; padding: 0; position: $position; width: 1px; }\r\n@mixin visually-restored($position:static) { clip: auto; height: auto; margin: auto; overflow: visible; position: $position; width: auto; }\r\n\r\n",".fixedsticky-dummy {\n  display: none;\n}\n\n.fixedsticky-on + .fixedsticky-dummy {\n  display: block;\n}\n\nmain:after {\n  clear: both;\n  content: \"\";\n  display: table;\n}\n\n@media (min-width: 760px) {\n  .styleguide-navigation-toggle {\n    display: none;\n  }\n}\n\n.styleguide-sidebar {\n  padding-top: 24px;\n}\n\n@media (max-width: 759px) {\n  .styleguide-sidebar {\n    text-align: center;\n    margin: 12px;\n    padding: 24px;\n    border: 1px solid #ddd;\n  }\n  .styleguide-sidebar .waypoints.is-hidden {\n    display: none;\n  }\n  .styleguide-sidebar .waypoints ul {\n    max-height: 600px;\n  }\n}\n\n@media (min-width: 760px) {\n  .styleguide-sidebar {\n    width: 25%;\n    float: right;\n    padding-right: 12px;\n    padding-left: 12px;\n    position: sticky;\n    top: 0;\n  }\n  .styleguide-sidebar.fixedsticky-on {\n    position: fixed;\n    width: 100%;\n    max-width: 1440px;\n    padding: 0;\n  }\n  .styleguide-sidebar.fixedsticky-on .waypoints {\n    position: absolute;\n    width: 25%;\n    padding: 24px 12px;\n    right: 0;\n    display: inline-block;\n  }\n  .styleguide-sidebar.fixedsticky-off {\n    position: static;\n  }\n}\n\n.styleguide-content {\n  width: 100%;\n  float: left;\n  padding-left: 12px;\n  padding-right: 12px;\n  padding-top: 24px;\n  line-height: 1.5625;\n}\n\n.styleguide-content:after {\n  clear: both;\n  content: \"\";\n  display: table;\n}\n\n@media (min-width: 760px) {\n  .styleguide-content {\n    width: 62.5%;\n    float: left;\n    padding-left: 12px;\n    padding-right: 12px;\n    margin-left: 12.5%;\n  }\n}\n\n.styleguide-content > .gallery {\n  margin: 12px -12px;\n}\n\n.styleguide-example {\n  margin: 24px 0 48px;\n}\n\n.styleguide-example-content {\n  border-radius: 2px;\n  border: 1px solid #ddd;\n}\n\n.styleguide-reference-link {\n  color: #ddd;\n}\n\n.styleguide-reference-link:hover {\n  color: #999;\n  text-decoration: none;\n}\n\n.styleguide-example > h3 em {\n  float: right;\n  text-transform: none;\n  font-style: normal;\n  font-weight: normal;\n  color: #999;\n}\n\n.styleguide-description {\n  margin-bottom: 12px;\n}\n\n.styleguide-element {\n  overflow: hidden;\n  position: relative;\n  padding: 24px;\n  min-height: 75px;\n}\n\n.styleguide-element + .styleguide-element {\n  border-top: 1px solid #eee;\n}\n\n.styleguide-modifier-name {\n  display: block;\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 4px 12px;\n  font-size: 14.4px;\n  color: #999;\n  background: #efefef;\n  border-bottom-left-radius: 2px;\n  border-top: 0;\n  z-index: 10;\n}\n\n.styleguide-html {\n  display: none;\n  padding: 10px 25px 10px 5px;\n  background: #efefef;\n  border-radius: 2px;\n  font-size: 18px;\n  overflow: auto;\n  margin-top: 24px;\n}\n\n.hljs {\n  background: transparent !important;\n  display: inline !important;\n  padding-right: 25px !important;\n}\n\n.styleguide-example .styleguide-html .highlight {\n  background: none;\n}\n\n.styleguide-element__description {\n  display: block;\n  margin: 0 0 24px;\n}\n\n.styleguide-element__description strong {\n  font-size: 90%;\n  background: #eee;\n  padding: 4px 8px;\n  border-radius: 2px;\n}\n\n.font-tile {\n  font-size: 28.125px;\n  margin: 24px 0;\n  padding: 24px;\n  border-radius: 2px;\n  border: 1px solid #ddd;\n}\n\n.font-tile code {\n  display: block;\n  font-size: 14.4px;\n  color: #999;\n  font-weight: 400;\n  line-height: 1.5;\n  padding-top: 5px;\n}\n\n.color-tile {\n  width: 100%;\n  background: #eee;\n  color: #fff;\n  text-shadow: 0 1px 3px rgba(0, 0, 0, 0.3);\n  padding: 48px 24px;\n  border-radius: 2px;\n}\n\n.color-tile code {\n  color: rgba(255, 255, 255, 0.7);\n}\n\n.color-tile__value {\n  display: block;\n}\n\n.button.button--preview:before {\n  content: \"\\25B6\";\n  margin-right: 12px;\n}\n\n.styleguide-tip:before {\n  font-family: \"icomoon\";\n  speak: none;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  content: \"\\f000 \";\n  position: relative;\n  top: 1px;\n  padding-right: 4px;\n}\n\n.styleguide-footer {\n  margin-top: 48px;\n  margin-bottom: 48px;\n}\n\n.styleguide-version {\n  vertical-align: 50%;\n  background: rgba(0, 0, 0, 0.25);\n  padding: 6px 12px;\n  border-radius: 4px;\n  text-shadow: none;\n}\n\n.styleguide-markuplink {\n  color: #999;\n  font-size: 14.4px;\n  margin: 4px;\n}\n\n.styleguide-markuplink a {\n  color: #999;\n}\n\n.styleguide-markuplink a:before {\n  font-family: \"icomoon\";\n  speak: none;\n  font-style: normal;\n  font-weight: normal;\n  font-variant: normal;\n  text-transform: none;\n  line-height: 1;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  content: \"\\f05f \";\n  position: relative;\n  top: 1px;\n  padding-right: 6px;\n}\n\n.styleguide-markuplink a:hover {\n  text-decoration: none;\n}\n\n#message-callout--example---white,\n#info-bar--example,\n#navigation--example---white {\n  background: #fff url(\"/styleguide/assets/pattern-dark-bg.png\");\n}\n\n.text-field.-search.styleguide-filter {\n  border: 0;\n  background-position: 0 50%;\n  padding-left: 18px;\n}\n\n.text-field.-search.styleguide-filter:focus {\n  border: 0;\n  box-shadow: none;\n}\n\n.waypoints li.is-hidden {\n  display: none;\n}\n\n.waypoints li.is-expanded ul {\n  max-height: 600px;\n}\n","// Asset Pipeline\r\n// --------------\r\n\r\n// This is the path where Forge's assets can be found. Be\r\n// sure to include the trailing slash!\r\n// ex: $forge-path: \"node_modules/@dosomething/forge/assets/\"\r\n$neue-path: \"../assets/\" !default; // @DEPRECATED: Will be removed in Forge 7.0.\r\n$forge-path: $neue-path !default;\r\n\r\n// The $asset-path variable can be used by your client-app\r\n// to simplify including asset URLs.\r\n$asset-path: \"\" !default;\r\n\r\n// Layout\r\n// ------\r\n\r\n$max-width: 1440px;\r\n\r\n$small: \"(max-width: 759px)\";\r\n$medium: \"(min-width: 760px)\";\r\n$large: \"(min-width: 960px)\";\r\n$larger: \"(min-width: 1060px)\";\r\n\r\n$mobile: $small;\r\n$tablet: $medium;\r\n$desktop: $larger;\r\n\r\n$susy: (\r\n  container: 1440px,\r\n  columns: 16,\r\n  gutters: (24/64.5),\r\n  column-width: 64.5px,\r\n  gutter-position: inside-static,\r\n  global-box-sizing: border-box,\r\n);\r\n\r\n// Colors\r\n// ------\r\n\r\n// Primary\r\n$blue: #23b7fb;\r\n$purple: #4e2b63;\r\n$yellow: #fcd116;\r\n\r\n// Grayscale\r\n$black: #000;\r\n$off-black: #222;\r\n$dark-gray: #444;\r\n$med-gray: #999;\r\n$light-gray: #ddd;\r\n$off-white: #f6f6f6;\r\n$white: #fff;\r\n\r\n$base-background-color: $light-gray;\r\n$base-font-color: $dark-gray;\r\n$error-color: #ff4747;\r\n\r\n// Modifiers\r\n$tint: 10%;\r\n$color-tint: 10%;\r\n\r\n// Typography\r\n// ----------\r\n\r\n// Font Stacks\r\n$font-proxima-nova: \"Proxima Nova\", \"Helvetica Neue\", \"Helvetica\", \"Arial\", sans-serif;\r\n$font-handwritten: \"CoveredGrace\", cursive;\r\n\r\n$base-font-family: $font-proxima-nova;\r\n$accent-font-family: $font-handwritten;\r\n\r\n// Weights\r\n$weight-normal: 400;\r\n$weight-sbold: 600;\r\n$weight-bold: 700;\r\n\r\n// Typography\r\n$font-base: 18px;\r\n$typographic-scale: 1.25;\r\n\r\n$font-gigantic: type-scale(7); // 83.989px;\r\n$font-superhero: type-scale(6); // 67.187px;\r\n$font-hero: type-scale(5); // 53.750px;\r\n// $font-larger-er: type-scale(4); // 43.945px\r\n$font-larger: type-scale(3); // 35.156px\r\n$font-large: type-scale(2); // 28.125px\r\n$font-medium: type-scale(1); // 22.500px\r\n$font-regular: type-scale(0); // 18.000px\r\n$font-small: type-scale(-1); // 14.400px\r\n$font-smaller: $font-small; // DEPRECATED: Use $font-small.\r\n\r\n$base-font-size: $font-regular;\r\n$unitless-line-height: 1.4444444;\r\n$header-line-height: 1.2;\r\n$comfortable-line-height: 1.5625; // ~28.125px at 18px\r\n\r\n// Measurements\r\n$base-spacing: 24px;\r\n$section-spacing: 48px;\r\n\r\n// Decoration\r\n$sm-border-radius: 2px; // for accent (images, text fields, etc)\r\n$lg-border-radius: 4px; // used for primary interactive elements (buttons, etc)\r\n$box-shadow: 0 2px 12px rgba(#000, 0.3);\r\n$text-shadow: 0 1px 3px rgba(#000, 0.3);\r\n$text-emboss: 0 1px 0 rgba(#fff, 0.2);\r\n","// rem Support\n// ===========\n\n// rem\n// ---\n// Check for an existing support mixin, or output directly.\n// - $prop  : <css property>\n// - $val   : <css value>\n@mixin susy-rem(\n  $prop,\n  $val\n) {\n  $_reqs: (\n    variable: rhythm-unit rem-with-px-fallback,\n    mixin: rem,\n  );\n  @if susy-support(rem, $_reqs, $warn: false) and $rhythm-unit == rem {\n    @include rem($prop, $val);\n  } @else {\n    #{$prop}: $val;\n  }\n}\n","// Span Syntax\n// ===========\n\n// Span [mixin]\n// ------------\n// Set a spanning element using shorthand syntax.\n// - $span  : <span>\n@mixin span(\n  $span\n) {\n  $inspect: $span;\n  $span: parse-span($span);\n  $output: span-math($span);\n  $nesting: susy-get(span, $span);\n  $clear: susy-get(clear, $span);\n\n  $box: susy-get(box-sizing, $span);\n  $content-box: if(susy-get(global-box-sizing) != 'border-box', true, false);\n  $box: $box or if(is-inside($span) and $content-box, border-box, null);\n\n  @if $clear == break {\n    @include break;\n  } @else if $clear == nobreak {\n    @include nobreak;\n  }\n\n  @include susy-inspect(span, $inspect);\n  @include output((box-sizing: $box));\n  @include float-span-output($output...);\n\n  @if valid-columns($nesting, silent) {\n    @include nested($span) { @content; }\n  } @else {\n    @content;\n  }\n}\n\n// Span [function]\n// ---------------\n// Return the width of a span.\n// - $span  : <span>\n@function span(\n  $span\n) {\n  @return get-span-width($span);\n}\n\n// Span Math\n// ---------\n// Get all the span results.\n// - $span: <map>\n@function span-math(\n  $span\n) {\n  $nest             : if(susy-get(role, $span) == nest, true, false);\n  $split-nest       : if(is-split($span) and $nest, true, false);\n  $edge             : get-edge($span);\n  $location         : get-location($span);\n\n  $float            : from;\n  $padding-before   : null;\n  $padding-after    : null;\n  $margin-before    : null;\n  $margin-after     : null;\n\n  // calculate widths\n  $spread: index(map-values($span), spread);\n  $span: if($split-nest and not($spread), map-merge($span, (spread: wide)), $span);\n  $width: get-span-width($span);\n  $gutters: get-gutters($span);\n\n  // apply gutters\n  @if is-inside($span) {\n    @if not(susy-get(role, $span)) {\n      $padding-before: map-get($gutters, before);\n      $padding-after: map-get($gutters, after);\n    }\n  } @else {\n    @if not($split-nest) {\n      $margin-before: map-get($gutters, before);\n      $margin-after: map-get($gutters, after);\n    }\n  }\n\n  // special margin handling\n  @if susy-get(output, $span) == isolate and $location {\n    $margin-before: get-isolation($span);\n    $margin-after: -100%;\n  } @else if $edge {\n    $is-split: is-split($span);\n    $pos: susy-get(gutter-position, $span);\n\n    @if $edge == last {\n      $float: susy-get(last-flow, $span);\n    }\n\n    @if not($is-split) {\n      @if $edge == full or ($edge == first and $pos == before) {\n        $margin-before: 0;\n      }\n      @if $edge == full or ($edge == last and $pos == after) {\n        $margin-after: 0;\n      }\n    }\n\n  }\n\n  @return (\n    width           : $width,\n    float           : $float,\n    margin-before   : $margin-before,\n    margin-after    : $margin-after,\n    padding-before  : $padding-before,\n    padding-after   : $padding-after,\n    flow            : susy-get(flow, $span),\n  );\n}\n\n// Get Span Width\n// --------------\n// Return span width.\n// - $span: <map>\n@function get-span-width(\n  $span\n) {\n  $span     : parse-span($span);\n\n  $n        : susy-get(span, $span);\n  $location : get-location($span);\n  $columns  : susy-get(columns, $span);\n  $gutters  : susy-get(gutters, $span);\n  $spread   : susy-get(spread, $span);\n\n  $context  : null;\n  $span-sum : null;\n  $width    : null;\n\n  @if $n == 'full' {\n    $pos: susy-get(gutter-position, $span);\n    $role: susy-get(role, $span);\n    $n: if($pos == split and $role != nest, susy-count($columns), 100%);\n  }\n\n  @if type-of($n) != number {\n    @warn \"(#{type-of($n)}) #{$n} is not a valid span.\";\n  } @else if unitless($n) {\n    $context: susy-sum($columns, $gutters, if(is-split($span), wide, narrow));\n    $spread: if(is-inside($span), $spread or wide, $spread);\n    $span-sum: susy($n, $location, $columns, $gutters, $spread);\n\n    $_math: susy-get(math, $span);\n    $_column-width: susy-get(column-width, $span);\n    @if $_math == static {\n      $width: $span-sum * valid-column-math($_math, $_column-width);\n    } @else {\n      $width: percentage($span-sum / $context);\n    }\n  } @else {\n    $width: $n;\n  }\n\n  @return $width;\n}\n","// Direction Helpers\n// =================\n\n// Susy Flow Defaults\n// ------------------\n// - PRIVATE\n@include susy-defaults((\n  flow: ltr,\n));\n\n// Get Direction\n// -------------\n// Return the 'from' or 'to' direction of a ltr or rtl flow.\n// - [$flow]  : ltr | rtl\n// - [$key]   : from | to\n@function get-direction(\n  $flow: map-get($susy-defaults, flow),\n  $key: from\n) {\n  $return: if($flow == rtl, (from: right, to: left), (from: left, to: right));\n  @return map-get($return, $key);\n}\n\n// To\n// --\n// Return the 'to' direction of a flow\n// - [$flow]  : ltr | rtl\n@function to(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, to);\n}\n\n// From\n// ----\n// Return the 'from' direction of a flow\n// - [$flow]  : ltr | rtl\n@function from(\n  $flow: map-get($susy-defaults, flow)\n) {\n  @return get-direction($flow, from);\n}\n","// Gutter Syntax\n// =============\n\n\n// Gutters\n// -------\n// Set gutters on an element.\n// - [$span]   : <settings>\n@mixin gutters(\n  $span: $susy\n) {\n  $inspect  : $span;\n  $span     : parse-gutters($span);\n  $_gutters : get-gutters($span);\n\n  $_output: (\n    before: map-get($_gutters, before),\n    after: map-get($_gutters, after),\n    flow: susy-get(flow, $span),\n  );\n\n  @include susy-inspect(gutters, $inspect);\n\n  @if is-inside($span) {\n    @include padding-output($_output...);\n  } @else {\n    @include margin-output($_output...);\n  }\n}\n\n@mixin gutter(\n  $span: $susy\n) {\n  @include gutters($span);\n}\n\n\n// Gutter\n// ------\n// Return the width of a gutter.\n// - [$span]   : <settings>\n@function gutter(\n  $span: $susy\n) {\n  $span: parse-gutters($span);\n\n  $_gutters: get-gutters($span);\n  $_gutters: map-get($_gutters, before) or map-get($_gutters, after);\n\n  @return $_gutters;\n}\n\n@function gutters(\n  $span: $susy\n) {\n  @return gutter($span);\n}\n\n\n// Get Gutter Width\n// ----------------\n// Return gutter width.\n// - [$context]: <context>\n@function get-gutter-width(\n  $context: $susy\n) {\n  $context  : parse-gutters($context);\n\n  $_gutters : susy-get(gutters, $context);\n  $_gutter  : susy-get(gutter-override, $context);\n\n  @if $_gutters and ($_gutters > 0) and not($_gutter) {\n    $_column-width: susy-get(column-width, $context);\n    $_math: gutter-math($context);\n    @if $_math == static {\n      $_gutter: $_gutters * valid-column-math($_math, $_column-width);\n    } @else {\n      $_columns : susy-get(columns, $context);\n      $_spread  : if(is-split($context), wide, susy-get(spread, $context));\n      $_gutter  : percentage($_gutters / susy-sum($_columns, $_gutters, $_spread));\n    }\n  }\n\n  $_gutter: if($_gutter == 'no-gutters' or $_gutter == 'no-gutter', null, $_gutter);\n\n  @return $_gutter;\n}\n\n\n// Get Gutters\n// -----------\n// Return before and after gutter values.\n// - [$context]: <context>\n@function get-gutters(\n  $context: $susy\n) {\n  $context            : parse-gutters($context);\n\n  $_gutter-position   : susy-get(gutter-position, $context);\n  $_gutter            : get-gutter-width($context);\n\n  $_return            : (before: null, after: null);\n\n  @if is-split($context) and $_gutter {\n    $_gutter: $_gutter / 2;\n    $_return: map-merge($_return, (before: $_gutter, after: $_gutter));\n  } @else {\n    $_return: map-merge($_return, ($_gutter-position: $_gutter));\n  }\n\n  @return $_return;\n}\n\n\n// Is Inside\n// ---------\n// Returns true if gutters are inside.\n// $context: <context>\n@function is-inside(\n  $context\n) {\n  $_inside: inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_inside, $_gutter-position), true, false);\n}\n\n\n// Is Split\n// --------\n// Returns true if gutters are split.\n// $context: <context>\n@function is-split(\n  $context\n) {\n  $_split: split inside inside-static;\n  $_gutter-position: susy-get(gutter-position, $context);\n\n  @return if(index($_split, $_gutter-position), true, false);\n}\n\n\n// Gutter Math\n// -----------\n// Return the math to use for gutter calculations\n// $context: <context>\n@function gutter-math(\n  $context: $susy\n) {\n  $_return  : susy-get(math, $context);\n  $_return  : if(susy-get(gutter-position, $context) == inside-static, static, $_return);\n\n  @return $_return;\n}\n","// Helper functions!\r\n\r\n// Helper to generate Forge URLs in client app stylesheets\r\n// @NOTE See `variables.scss` for $forge-path.\r\n@function forge-asset-url($file) {\r\n  @return url(\"#{$forge-path}#{$file}\");\r\n}\r\n\r\n// @DEPRECATED: Use `forge-asset-url()` instead!\r\n@function neue-asset-url($file) {\r\n  @warn \"The neue-asset-url() helper is deprecated. Use forge-asset-url() instead!\";\r\n  @return forge-asset-url($file);\r\n}\r\n\r\n// Calculate font-size based on a typographic scale.\r\n@function type-scale($step) {\r\n  $font-size: $font-base;\r\n\r\n  @if $step == 0 {\r\n    @return $font-size;\r\n  }\r\n\r\n  @if $step > 0 {\r\n    @for $i from 1 through $step {\r\n      $font-size: $font-size * $typographic-scale;\r\n    }\r\n  } @else {\r\n    @for $i from $step to 0 {\r\n      $font-size: $font-size / $typographic-scale;\r\n    }\r\n  }\r\n\r\n  @return $font-size;\r\n}\r\n\r\n// Helper to generate URLs in client app stylesheets\r\n// @NOTE See `variables.scss` for $asset-path.\r\n@function asset-url($file) {\r\n  @return url(\"#{$asset-path}#{$file}\");\r\n}\r\n"]}